{"ast":null,"code":"// src/localStorageBroadcastChannel.ts\nvar KEY_PREFIX = \"__lsbc__\";\nvar LocalStorageBroadcastChannel = class {\n  constructor(name) {\n    this.eventTarget = window;\n\n    this.postMessage = data => {\n      if (typeof window === \"undefined\") {\n        return;\n      }\n\n      try {\n        window.localStorage.setItem(this.channelKey, JSON.stringify(data));\n        window.localStorage.removeItem(this.channelKey);\n      } catch (e) {}\n    };\n\n    this.addEventListener = (eventName, listener) => {\n      this.eventTarget.addEventListener(this.prefixEventName(eventName), e => {\n        listener(e);\n      });\n    };\n\n    this.setupLocalStorageListener = () => {\n      const notifyListeners = e => {\n        if (e.key !== this.channelKey || !e.newValue) {\n          return;\n        }\n\n        try {\n          const data = JSON.parse(e.newValue || \"\");\n          const event = new MessageEvent(this.prefixEventName(\"message\"), {\n            data\n          });\n          this.eventTarget.dispatchEvent(event);\n        } catch (e2) {}\n      };\n\n      window.addEventListener(\"storage\", notifyListeners);\n    };\n\n    this.channelKey = KEY_PREFIX + name;\n    this.setupLocalStorageListener();\n  }\n\n  prefixEventName(eventName) {\n    return this.channelKey + eventName;\n  }\n\n};\nexport { LocalStorageBroadcastChannel };","map":{"version":3,"mappings":";AAEA,IAAMA,aAAa,UAAnB;AAEO,IAAMC,+BAAN,MAAsC;AAI3CC,cAAYC,IAAZ,EAA0B;AAH1B,SAAiBC,WAAjB,GAA+BC,MAA/B;;AAQA,SAAOC,WAAP,GAAsBC,IAAD,IAAmB;AACtC,UAAI,OAAOF,MAAP,KAAkB,WAAtB,EAAmC;AAEjC;AACF;;AAEA,UAAI;AACFA,eAAOG,YAAP,CAAoBC,OAApB,CAA4B,KAAKC,UAAjC,EAA6CC,KAAKC,SAAL,CAAeL,IAAf,CAA7C;AACAF,eAAOG,YAAP,CAAoBK,UAApB,CAA+B,KAAKH,UAApC;AACF,OAHA,CAGA,OAASI,CAAT,EAAY,CAEZ;AACF,KAZA;;AAcA,SAAOC,gBAAP,GAA0B,CAACC,SAAD,EAAuBC,QAAvB,KAAuD;AAC/E,WAAKb,WAAL,CAAiBW,gBAAjB,CAAkC,KAAKG,eAAL,CAAqBF,SAArB,CAAlC,EAAmEF,KAAK;AACtEG,iBAASH,CAAT;AACD,OAFD;AAGF,KAJA;;AAMA,SAAQK,yBAAR,GAAoC,MAAM;AACxC,YAAMC,kBAAmBN,CAAD,IAAqB;AAC3C,YAAIA,EAAEO,GAAF,KAAU,KAAKX,UAAf,IAA6B,CAACI,EAAEQ,QAApC,EAA8C;AAC5C;AACF;;AAEA,YAAI;AACF,gBAAMf,OAAOI,KAAKY,KAAL,CAAWT,EAAEQ,QAAF,IAAc,EAAzB,CAAb;AACA,gBAAME,QAAQ,IAAIC,YAAJ,CAAiB,KAAKP,eAAL,CAAqB,SAArB,CAAjB,EAAkD;AAC9DX;AAD8D,WAAlD,CAAd;AAGA,eAAKH,WAAL,CAAiBsB,aAAjB,CAA+BF,KAA/B;AACF,SANA,CAMA,OAASV,EAAT,EAAY,CAEZ;AACF,OAdA;;AAgBAT,aAAOU,gBAAP,CAAwB,SAAxB,EAAmCK,eAAnC;AACF,KAlBA;;AAxBE,SAAKV,UAAL,GAAkBV,aAAaG,IAA/B;AACA,SAAKgB,yBAAL;AACF;;AA0CQD,kBAAgBF,SAAhB,EAA2C;AACjD,WAAO,KAAKN,UAAL,GAAkBM,SAAzB;AACF;;AAnD2C,CAAtC","names":["KEY_PREFIX","LocalStorageBroadcastChannel","constructor","name","eventTarget","window","postMessage","data","localStorage","setItem","channelKey","JSON","stringify","removeItem","e","addEventListener","eventName","listener","prefixEventName","setupLocalStorageListener","notifyListeners","key","newValue","parse","event","MessageEvent","dispatchEvent"],"sources":["/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/shared/src/localStorageBroadcastChannel.ts"],"sourcesContent":["type Listener<T> = (e: MessageEvent<T>) => void;\n\nconst KEY_PREFIX = '__lsbc__';\n\nexport class LocalStorageBroadcastChannel<E> {\n  private readonly eventTarget = window;\n  private readonly channelKey: string;\n\n  constructor(name: string) {\n    this.channelKey = KEY_PREFIX + name;\n    this.setupLocalStorageListener();\n  }\n\n  public postMessage = (data: E): void => {\n    if (typeof window === 'undefined') {\n      // Silently do nothing\n      return;\n    }\n\n    try {\n      window.localStorage.setItem(this.channelKey, JSON.stringify(data));\n      window.localStorage.removeItem(this.channelKey);\n    } catch (e) {\n      // Silently do nothing\n    }\n  };\n\n  public addEventListener = (eventName: 'message', listener: Listener<E>): void => {\n    this.eventTarget.addEventListener(this.prefixEventName(eventName), e => {\n      listener(e as MessageEvent);\n    });\n  };\n\n  private setupLocalStorageListener = () => {\n    const notifyListeners = (e: StorageEvent) => {\n      if (e.key !== this.channelKey || !e.newValue) {\n        return;\n      }\n\n      try {\n        const data = JSON.parse(e.newValue || '');\n        const event = new MessageEvent(this.prefixEventName('message'), {\n          data,\n        });\n        this.eventTarget.dispatchEvent(event);\n      } catch (e) {\n        //\n      }\n    };\n\n    window.addEventListener('storage', notifyListeners);\n  };\n\n  private prefixEventName(eventName: string): string {\n    return this.channelKey + eventName;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
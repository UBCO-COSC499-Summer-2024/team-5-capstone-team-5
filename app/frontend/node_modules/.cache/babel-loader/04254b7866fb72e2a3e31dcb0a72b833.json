{"ast":null,"code":"// src/isomorphicAtob.ts\nvar isomorphicAtob = data => {\n  if (typeof atob !== \"undefined\" && typeof atob === \"function\") {\n    return atob(data);\n  } else if (typeof global !== \"undefined\" && global.Buffer) {\n    return new global.Buffer(data, \"base64\").toString();\n  }\n\n  return data;\n};\n\nexport { isomorphicAtob };","map":{"version":3,"mappings":";AAIO,IAAMA,iBAAkBC,IAAD,IAAkB;AAC9C,MAAI,OAAOC,IAAP,KAAgB,WAAhB,IAA+B,OAAOA,IAAP,KAAgB,UAAnD,EAA+D;AAC7D,WAAOA,KAAKD,IAAL,CAAP;AACF,GAFA,MAEA,IAAW,OAAOE,MAAP,KAAkB,WAAlB,IAAiCA,OAAOC,MAAnD,EAA2D;AACzD,WAAO,IAAID,OAAOC,MAAX,CAAkBH,IAAlB,EAAwB,QAAxB,EAAkCI,QAAlC,EAAP;AACF;;AACA,SAAOJ,IAAP;AACF,CAPO","names":["isomorphicAtob","data","atob","global","Buffer","toString"],"sources":["/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/shared/src/isomorphicAtob.ts"],"sourcesContent":["/**\n * A function that decodes a string of data which has been encoded using base-64 encoding.\n * Uses `atob` if available, otherwise uses `Buffer` from `global`. If neither are available, returns the data as-is.\n */\nexport const isomorphicAtob = (data: string) => {\n  if (typeof atob !== 'undefined' && typeof atob === 'function') {\n    return atob(data);\n  } else if (typeof global !== 'undefined' && global.Buffer) {\n    return new global.Buffer(data, 'base64').toString();\n  }\n  return data;\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { addClerkPrefix, cleanDoubleSlashes, getClerkJsMajorVersionOrTag, getScriptUrl, hasLeadingSlash, hasTrailingSlash, isCurrentDevAccountPortalOrigin, isLegacyDevAccountPortalOrigin, isNonEmptyURL, isStaging, joinURL, parseSearchParams, stripScheme, withLeadingSlash, withTrailingSlash, withoutLeadingSlash, withoutTrailingSlash } from \"./chunk-L45N5DM5.mjs\";\nimport { loadScript } from \"./chunk-AOO6TJNL.mjs\";\nimport { LocalStorageBroadcastChannel } from \"./chunk-RSOCGYTF.mjs\";\nimport { logger } from \"./chunk-CYDR2ZSA.mjs\";\nimport { applyFunctionToObj, filterProps, removeUndefined, without } from \"./chunk-CFXQSUF6.mjs\";\nimport { Poller, createWorkerTimers, noop } from \"./chunk-XPYJQUM7.mjs\";\nimport { isHttpOrHttps, isProxyUrlRelative, isValidProxyUrl, proxyUrlToAbsoluteURL } from \"./chunk-6NDGN2IU.mjs\";\nimport { camelToSnake, deepCamelToSnake, deepSnakeToCamel, getNonUndefinedValues, isIPV4Address, isTruthy, snakeToCamel, titleize, toSentence } from \"./chunk-E6T5KUVH.mjs\";\nimport { DEV_BROWSER_JWT_KEY, extractDevBrowserJWTFromURL, setDevBrowserJWTInURL } from \"./chunk-K64INQ4C.mjs\";\nimport { ClerkAPIResponseError, ClerkRuntimeError, EmailLinkError, EmailLinkErrorCode, buildErrorThrower, is4xxError, isClerkAPIResponseError, isClerkRuntimeError, isEmailLinkError, isKnownError, isMetamaskError, isNetworkError, isPasswordPwnedError, isUnauthorizedError, isUserLockedError, parseError, parseErrors } from \"./chunk-T5VTDOY6.mjs\";\nimport { extension, readJSONFile } from \"./chunk-5JU2E5TY.mjs\";\nimport { handleValueOrFn } from \"./chunk-TRWMHODU.mjs\";\nimport { apiUrlFromPublishableKey } from \"./chunk-G6V773WF.mjs\";\nimport { buildPublishableKey, createDevOrStagingUrlCache, isDevelopmentFromPublishableKey, isDevelopmentFromSecretKey, isProductionFromPublishableKey, isProductionFromSecretKey, isPublishableKey, parsePublishableKey } from \"./chunk-ZXFUQ6LY.mjs\";\nimport { isomorphicAtob } from \"./chunk-TETGTEI2.mjs\";\nimport { isomorphicBtoa } from \"./chunk-KOH7GTJO.mjs\";\nimport { inBrowser, isBrowserOnline, isValidBrowser, isValidBrowserOnline, userAgentIsRobot } from \"./chunk-LJ4R7M7R.mjs\";\nimport { callWithRetry } from \"./chunk-4PW5MDZA.mjs\";\nimport { colorToSameTypeString, hasAlpha, hexStringToRgbaColor, isHSLColor, isRGBColor, isTransparent, isValidHexString, isValidHslaString, isValidRgbaString, stringToHslaColor, stringToSameTypeColor } from \"./chunk-WUG2DC4W.mjs\";\nimport { CURRENT_DEV_INSTANCE_SUFFIXES, DEV_OR_STAGING_SUFFIXES, LEGACY_DEV_INSTANCE_SUFFIXES, LOCAL_API_URL, LOCAL_ENV_SUFFIXES, PROD_API_URL, STAGING_API_URL, STAGING_ENV_SUFFIXES } from \"./chunk-X2FYR5U6.mjs\";\nimport { addYears, dateTo12HourTime, differenceInCalendarDays, formatRelative, normalizeDate } from \"./chunk-FSKKI4LG.mjs\";\nimport { deprecated, deprecatedObjectProperty, deprecatedProperty, isDevelopmentEnvironment, isProductionEnvironment, isTestEnvironment } from \"./chunk-IC4FGZI3.mjs\";\nimport \"./chunk-UVVCWSVF.mjs\"; // src/utils/createDeferredPromise.ts\n\nvar createDeferredPromise = () => {\n  let resolve = noop;\n  let reject = noop;\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return {\n    promise,\n    resolve,\n    reject\n  };\n}; // src/utils/logErrorInDevMode.ts\n\n\nvar logErrorInDevMode = message => {\n  if (isDevelopmentEnvironment()) {\n    console.error(`Clerk: ${message}`);\n  }\n}; // src/utils/runWithExponentialBackOff.ts\n\n\nvar defaultOptions = {\n  firstDelay: 125,\n  maxDelay: 0,\n  timeMultiple: 2,\n  shouldRetry: () => true\n};\n\nvar sleep = async ms => new Promise(s => setTimeout(s, ms));\n\nvar createExponentialDelayAsyncFn = opts => {\n  let timesCalled = 0;\n\n  const calculateDelayInMs = () => {\n    const constant = opts.firstDelay;\n    const base = opts.timeMultiple;\n    const delay = constant * Math.pow(base, timesCalled);\n    return Math.min(opts.maxDelay || delay, delay);\n  };\n\n  return async () => {\n    await sleep(calculateDelayInMs());\n    timesCalled++;\n  };\n};\n\nvar runWithExponentialBackOff = async function (callback) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let iterationsCount = 0;\n  const {\n    shouldRetry,\n    firstDelay,\n    maxDelay,\n    timeMultiple\n  } = { ...defaultOptions,\n    ...options\n  };\n  const delay = createExponentialDelayAsyncFn({\n    firstDelay,\n    maxDelay,\n    timeMultiple\n  });\n\n  while (true) {\n    try {\n      return await callback();\n    } catch (e) {\n      iterationsCount++;\n\n      if (!shouldRetry(e, iterationsCount)) {\n        throw e;\n      }\n\n      await delay();\n    }\n  }\n};\n\nexport { CURRENT_DEV_INSTANCE_SUFFIXES, ClerkAPIResponseError, ClerkRuntimeError, DEV_BROWSER_JWT_KEY, DEV_OR_STAGING_SUFFIXES, EmailLinkError, EmailLinkErrorCode, LEGACY_DEV_INSTANCE_SUFFIXES, LOCAL_API_URL, LOCAL_ENV_SUFFIXES, LocalStorageBroadcastChannel, PROD_API_URL, Poller, STAGING_API_URL, STAGING_ENV_SUFFIXES, addClerkPrefix, addYears, apiUrlFromPublishableKey, applyFunctionToObj, buildErrorThrower, buildPublishableKey, callWithRetry, camelToSnake, cleanDoubleSlashes, colorToSameTypeString, createDeferredPromise, createDevOrStagingUrlCache, createWorkerTimers, dateTo12HourTime, deepCamelToSnake, deepSnakeToCamel, deprecated, deprecatedObjectProperty, deprecatedProperty, differenceInCalendarDays, extension, extractDevBrowserJWTFromURL, filterProps, formatRelative, getClerkJsMajorVersionOrTag, getNonUndefinedValues, getScriptUrl, handleValueOrFn, hasAlpha, hasLeadingSlash, hasTrailingSlash, hexStringToRgbaColor, inBrowser, is4xxError, isBrowserOnline, isClerkAPIResponseError, isClerkRuntimeError, isCurrentDevAccountPortalOrigin, isDevelopmentEnvironment, isDevelopmentFromPublishableKey, isDevelopmentFromSecretKey, isEmailLinkError, isHSLColor, isHttpOrHttps, isIPV4Address, isKnownError, isLegacyDevAccountPortalOrigin, isMetamaskError, isNetworkError, isNonEmptyURL, isPasswordPwnedError, isProductionEnvironment, isProductionFromPublishableKey, isProductionFromSecretKey, isProxyUrlRelative, isPublishableKey, isRGBColor, isStaging, isTestEnvironment, isTransparent, isTruthy, isUnauthorizedError, isUserLockedError, isValidBrowser, isValidBrowserOnline, isValidHexString, isValidHslaString, isValidProxyUrl, isValidRgbaString, isomorphicAtob, isomorphicBtoa, joinURL, loadScript, logErrorInDevMode, logger, noop, normalizeDate, parseError, parseErrors, parsePublishableKey, parseSearchParams, proxyUrlToAbsoluteURL, readJSONFile, removeUndefined, runWithExponentialBackOff, setDevBrowserJWTInURL, snakeToCamel, stringToHslaColor, stringToSameTypeColor, stripScheme, titleize, toSentence, userAgentIsRobot, withLeadingSlash, withTrailingSlash, without, withoutLeadingSlash, withoutTrailingSlash };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAQO,IAAMA,wBAAwB,MAAM;AACzC,MAAIC,UAAoBC,IAAxB;AACA,MAAIC,SAAmBD,IAAvB;AACA,QAAME,UAAU,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AACxCN,cAAUK,GAAV;AACAH,aAASI,GAAT;AACD,GAHe,CAAhB;AAIA,SAAO;AAAEH,WAAF;AAAWH,WAAX;AAAoBE;AAApB,GAAP;AACF,CARO,C;;;ACNA,IAAMK,oBAAqBC,OAAD,IAAqB;AACpD,MAAIC,0BAAJ,EAAgC;AAC9BC,YAAQC,KAAR,CAAc,UAAUH,OAAO,EAA/B;AACF;AACF,CAJO,C;;;ACOP,IAAMI,iBAA2C;AAC/CC,cAAY,GADmC;AAE/CC,YAAU,CAFqC;AAG/CC,gBAAc,CAHiC;AAI/CC,eAAa,MAAM;AAJ4B,CAAjD;;AAOA,IAAMC,QAAQ,MAAOC,EAAP,IAA4B,IAAId,OAAJ,CAAYe,KAAKC,WAAWD,CAAX,EAAcD,EAAd,CAAjB,CAA1C;;AAEA,IAAMG,gCAAiCC,IAAD,IAIhC;AACJ,MAAIC,cAAc,CAAlB;;AAEA,QAAMC,qBAAqB,MAAM;AAC/B,UAAMC,WAAWH,KAAKT,UAAtB;AACA,UAAMa,OAAOJ,KAAKP,YAAlB;AACA,UAAMY,QAAQF,WAAWG,KAAKC,GAAL,CAASH,IAAT,EAAeH,WAAf,CAAzB;AACA,WAAOK,KAAKE,GAAL,CAASR,KAAKR,QAAL,IAAiBa,KAA1B,EAAiCA,KAAjC,CAAP;AACF,GALA;;AAOA,SAAO,YAA2B;AAChC,UAAMV,MAAMO,oBAAN,CAAN;AACAD;AACF,GAHA;AAIF,CAlBA;;AAoBO,IAAMQ,4BAA4B,gBACvCC,QADuC,EAGxB;AAAA,MADfC,OACe,uEADW,EACX;AACf,MAAIC,kBAAkB,CAAtB;AACA,QAAM;AAAElB,eAAF;AAAeH,cAAf;AAA2BC,YAA3B;AAAqCC;AAArC,MAAsD,EAC1D,GAAGH,cADuD;AAE1D,OAAGqB;AAFuD,GAA5D;AAIA,QAAMN,QAAQN,8BAA8B;AAAER,cAAF;AAAcC,YAAd;AAAwBC;AAAxB,GAA9B,CAAd;;AAGA,SAAO,IAAP,EAAa;AACX,QAAI;AACF,aAAO,MAAMiB,UAAb;AACF,KAFA,CAEA,OAASG,CAAT,EAAY;AACVD;;AACA,UAAI,CAAClB,YAAYmB,CAAZ,EAAeD,eAAf,CAAL,EAAsC;AACpC,cAAMC,CAAN;AACF;;AACA,YAAMR,OAAN;AACF;AACF;AACF,CAvBO","names":["createDeferredPromise","resolve","noop","reject","promise","Promise","res","rej","logErrorInDevMode","message","isDevelopmentEnvironment","console","error","defaultOptions","firstDelay","maxDelay","timeMultiple","shouldRetry","sleep","ms","s","setTimeout","createExponentialDelayAsyncFn","opts","timesCalled","calculateDelayInMs","constant","base","delay","Math","pow","min","runWithExponentialBackOff","callback","options","iterationsCount","e"],"sources":["/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/shared/src/utils/createDeferredPromise.ts","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/shared/src/utils/logErrorInDevMode.ts","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/shared/src/utils/runWithExponentialBackOff.ts"],"sourcesContent":["import { noop } from './noop';\n\ntype Callback = (val?: any) => void;\n\n/**\n * Create a promise that can be resolved or rejected from\n * outside the Promise constructor callback\n */\nexport const createDeferredPromise = () => {\n  let resolve: Callback = noop;\n  let reject: Callback = noop;\n  const promise = new Promise((res, rej) => {\n    resolve = res;\n    reject = rej;\n  });\n  return { promise, resolve, reject };\n};\n","import { isDevelopmentEnvironment } from './runtimeEnvironment';\n\nexport const logErrorInDevMode = (message: string) => {\n  if (isDevelopmentEnvironment()) {\n    console.error(`Clerk: ${message}`);\n  }\n};\n","type Milliseconds = number;\n\ntype BackoffOptions = Partial<{\n  firstDelay: Milliseconds;\n  maxDelay: Milliseconds;\n  timeMultiple: number;\n  shouldRetry: (error: unknown, iterationsCount: number) => boolean;\n}>;\n\nconst defaultOptions: Required<BackoffOptions> = {\n  firstDelay: 125,\n  maxDelay: 0,\n  timeMultiple: 2,\n  shouldRetry: () => true,\n};\n\nconst sleep = async (ms: Milliseconds) => new Promise(s => setTimeout(s, ms));\n\nconst createExponentialDelayAsyncFn = (opts: {\n  firstDelay: Milliseconds;\n  maxDelay: Milliseconds;\n  timeMultiple: number;\n}) => {\n  let timesCalled = 0;\n\n  const calculateDelayInMs = () => {\n    const constant = opts.firstDelay;\n    const base = opts.timeMultiple;\n    const delay = constant * Math.pow(base, timesCalled);\n    return Math.min(opts.maxDelay || delay, delay);\n  };\n\n  return async (): Promise<void> => {\n    await sleep(calculateDelayInMs());\n    timesCalled++;\n  };\n};\n\nexport const runWithExponentialBackOff = async <T>(\n  callback: () => T | Promise<T>,\n  options: BackoffOptions = {},\n): Promise<T> => {\n  let iterationsCount = 0;\n  const { shouldRetry, firstDelay, maxDelay, timeMultiple } = {\n    ...defaultOptions,\n    ...options,\n  };\n  const delay = createExponentialDelayAsyncFn({ firstDelay, maxDelay, timeMultiple });\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    try {\n      return await callback();\n    } catch (e) {\n      iterationsCount++;\n      if (!shouldRetry(e, iterationsCount)) {\n        throw e;\n      }\n      await delay();\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// src/errors/errorThrower.ts\nimport { buildErrorThrower } from \"@clerk/shared/error\";\nvar errorThrower = buildErrorThrower({\n  packageName: \"@clerk/clerk-react\"\n});\n\nfunction setErrorThrowerOptions(options) {\n  errorThrower.setMessages(options).setPackageName(options);\n} // src/utils/loadClerkJsScript.ts\n\n\nimport { parsePublishableKey } from \"@clerk/shared/keys\";\nimport { loadScript } from \"@clerk/shared/loadScript\";\nimport { isValidProxyUrl, proxyUrlToAbsoluteURL } from \"@clerk/shared/proxy\";\nimport { addClerkPrefix } from \"@clerk/shared/url\"; // src/utils/isDevOrStageUrl.tsx\n\nimport { createDevOrStagingUrlCache } from \"@clerk/shared/keys\";\nvar {\n  isDevOrStagingUrl\n} = createDevOrStagingUrlCache(); // src/utils/versionSelector.ts\n\nvar versionSelector = function (clerkJSVersion) {\n  let packageVersion = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"5.2.3\";\n\n  if (clerkJSVersion) {\n    return clerkJSVersion;\n  }\n\n  const prereleaseTag = getPrereleaseTag(packageVersion);\n\n  if (prereleaseTag) {\n    if (prereleaseTag === \"snapshot\") {\n      return \"5.6.0\";\n    }\n\n    return prereleaseTag;\n  }\n\n  return getMajorVersion(packageVersion);\n};\n\nvar getPrereleaseTag = packageVersion => {\n  var _a;\n\n  return (_a = packageVersion.trim().replace(/^v/, \"\").match(/-(.+?)(\\.|$)/)) == null ? void 0 : _a[1];\n};\n\nvar getMajorVersion = packageVersion => packageVersion.trim().replace(/^v/, \"\").split(\".\")[0]; // src/utils/loadClerkJsScript.ts\n\n\nvar FAILED_TO_LOAD_ERROR = \"Clerk: Failed to load Clerk\";\n\nvar loadClerkJsScript = opts => {\n  const {\n    publishableKey\n  } = opts;\n\n  if (!publishableKey) {\n    errorThrower.throwMissingPublishableKeyError();\n  }\n\n  const existingScript = document.querySelector(\"script[data-clerk-js-script]\");\n\n  if (existingScript) {\n    return new Promise((resolve, reject) => {\n      existingScript.addEventListener(\"load\", () => {\n        resolve(existingScript);\n      });\n      existingScript.addEventListener(\"error\", () => {\n        reject(FAILED_TO_LOAD_ERROR);\n      });\n    });\n  }\n\n  return loadScript(clerkJsScriptUrl(opts), {\n    async: true,\n    crossOrigin: \"anonymous\",\n    beforeLoad: applyClerkJsScriptAttributes(opts)\n  }).catch(() => {\n    throw new Error(FAILED_TO_LOAD_ERROR);\n  });\n};\n\nvar clerkJsScriptUrl = opts => {\n  var _a, _b;\n\n  const {\n    clerkJSUrl,\n    clerkJSVariant,\n    clerkJSVersion,\n    proxyUrl,\n    domain,\n    publishableKey\n  } = opts;\n\n  if (clerkJSUrl) {\n    return clerkJSUrl;\n  }\n\n  let scriptHost = \"\";\n\n  if (!!proxyUrl && isValidProxyUrl(proxyUrl)) {\n    scriptHost = proxyUrlToAbsoluteURL(proxyUrl).replace(/http(s)?:\\/\\//, \"\");\n  } else if (domain && !isDevOrStagingUrl(((_a = parsePublishableKey(publishableKey)) == null ? void 0 : _a.frontendApi) || \"\")) {\n    scriptHost = addClerkPrefix(domain);\n  } else {\n    scriptHost = ((_b = parsePublishableKey(publishableKey)) == null ? void 0 : _b.frontendApi) || \"\";\n  }\n\n  const variant = clerkJSVariant ? `${clerkJSVariant.replace(/\\.+$/, \"\")}.` : \"\";\n  const version = versionSelector(clerkJSVersion);\n  return `https://${scriptHost}/npm/@clerk/clerk-js@${version}/dist/clerk.${variant}browser.js`;\n};\n\nvar buildClerkJsScriptAttributes = options => {\n  const obj = {};\n\n  if (options.publishableKey) {\n    obj[\"data-clerk-publishable-key\"] = options.publishableKey;\n  }\n\n  if (options.proxyUrl) {\n    obj[\"data-clerk-proxy-url\"] = options.proxyUrl;\n  }\n\n  if (options.domain) {\n    obj[\"data-clerk-domain\"] = options.domain;\n  }\n\n  return obj;\n};\n\nvar applyClerkJsScriptAttributes = options => script => {\n  const attributes = buildClerkJsScriptAttributes(options);\n\n  for (const attribute in attributes) {\n    script.setAttribute(attribute, attributes[attribute]);\n  }\n}; // src/hooks/useAuth.ts\n\n\nimport { useCallback } from \"react\"; // src/contexts/AuthContext.ts\n\nimport { createContextAndHook } from \"@clerk/shared/react\";\nvar [AuthContext, useAuthContext] = createContextAndHook(\"AuthContext\"); // src/contexts/IsomorphicClerkContext.tsx\n\nimport { ClerkInstanceContext, useClerkInstanceContext } from \"@clerk/shared/react\";\nvar IsomorphicClerkContext = ClerkInstanceContext;\nvar useIsomorphicClerkContext = useClerkInstanceContext; // src/errors/messages.ts\n\nvar multipleClerkProvidersError = \"You've added multiple <ClerkProvider> components in your React component tree. Wrap your components in a single <ClerkProvider>.\";\n\nvar multipleChildrenInButtonComponent = name => `You've passed multiple children components to <${name}/>. You can only pass a single child component or text.`;\n\nvar invalidStateError = \"Invalid state. Feel free to submit a bug or reach out to support here: https://clerk.com/support\";\nvar unsupportedNonBrowserDomainOrProxyUrlFunction = \"Unsupported usage of isSatellite, domain or proxyUrl. The usage of isSatellite, domain or proxyUrl as function is not supported in non-browser environments.\";\nvar userProfilePageRenderedError = \"<UserProfile.Page /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.\";\nvar userProfileLinkRenderedError = \"<UserProfile.Link /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.\";\nvar organizationProfilePageRenderedError = \"<OrganizationProfile.Page /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.\";\nvar organizationProfileLinkRenderedError = \"<OrganizationProfile.Link /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.\";\n\nvar customPagesIgnoredComponent = componentName => `<${componentName} /> can only accept <${componentName}.Page /> and <${componentName}.Link /> as its children. Any other provided component will be ignored.`;\n\nvar customPageWrongProps = componentName => `Missing props. <${componentName}.Page /> component requires the following props: url, label, labelIcon, alongside with children to be rendered inside the page.`;\n\nvar customLinkWrongProps = componentName => `Missing props. <${componentName}.Link /> component requires the following props: url, label and labelIcon.`;\n\nvar useAuthHasRequiresRoleOrPermission = 'Missing parameters. `has` from `useAuth` requires a permission or role key to be passed. Example usage: `has({permission: \"org:posts:edit\"`';\n\nvar noPathProvidedError = componentName => `The <${componentName}/> component uses path-based routing by default unless a different routing strategy is provided using the \\`routing\\` prop. When path-based routing is used, you need to provide the path where the component is mounted on by using the \\`path\\` prop. Example: <${componentName} path={'/my-path'} />`;\n\nvar incompatibleRoutingWithPathProvidedError = componentName => `The \\`path\\` prop will only be respected when the Clerk component uses path-based routing. To resolve this error, pass \\`routing='path'\\` to the <${componentName}/> component, or drop the \\`path\\` prop to switch to hash-based routing. For more details please refer to our docs: https://clerk.com/docs`; // src/hooks/useAssertWrappedByClerkProvider.ts\n\n\nimport { useAssertWrappedByClerkProvider as useSharedAssertWrappedByClerkProvider } from \"@clerk/shared/react\";\n\nvar useAssertWrappedByClerkProvider = source => {\n  useSharedAssertWrappedByClerkProvider(() => {\n    errorThrower.throwMissingClerkProviderError({\n      source\n    });\n  });\n}; // src/hooks/utils.ts\n\n\nvar clerkLoaded = isomorphicClerk => {\n  return new Promise(resolve => {\n    if (isomorphicClerk.loaded) {\n      resolve();\n    }\n\n    isomorphicClerk.addOnLoaded(resolve);\n  });\n};\n\nvar createGetToken = isomorphicClerk => {\n  return async options => {\n    await clerkLoaded(isomorphicClerk);\n\n    if (!isomorphicClerk.session) {\n      return null;\n    }\n\n    return isomorphicClerk.session.getToken(options);\n  };\n};\n\nvar createSignOut = isomorphicClerk => {\n  return async function () {\n    await clerkLoaded(isomorphicClerk);\n    return isomorphicClerk.signOut(...arguments);\n  };\n}; // src/hooks/useAuth.ts\n\n\nvar useAuth = () => {\n  useAssertWrappedByClerkProvider(\"useAuth\");\n  const {\n    sessionId,\n    userId,\n    actor,\n    orgId,\n    orgRole,\n    orgSlug,\n    orgPermissions\n  } = useAuthContext();\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const getToken = useCallback(createGetToken(isomorphicClerk), [isomorphicClerk]);\n  const signOut = useCallback(createSignOut(isomorphicClerk), [isomorphicClerk]);\n  const has = useCallback(params => {\n    if (!(params == null ? void 0 : params.permission) && !(params == null ? void 0 : params.role)) {\n      errorThrower.throw(useAuthHasRequiresRoleOrPermission);\n    }\n\n    if (!orgId || !userId || !orgRole || !orgPermissions) {\n      return false;\n    }\n\n    if (params.permission) {\n      return orgPermissions.includes(params.permission);\n    }\n\n    if (params.role) {\n      return orgRole === params.role;\n    }\n\n    return false;\n  }, [orgId, orgRole, userId, orgPermissions]);\n\n  if (sessionId === void 0 && userId === void 0) {\n    return {\n      isLoaded: false,\n      isSignedIn: void 0,\n      sessionId,\n      userId,\n      actor: void 0,\n      orgId: void 0,\n      orgRole: void 0,\n      orgSlug: void 0,\n      has: void 0,\n      signOut,\n      getToken\n    };\n  }\n\n  if (sessionId === null && userId === null) {\n    return {\n      isLoaded: true,\n      isSignedIn: false,\n      sessionId,\n      userId,\n      actor: null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has: () => false,\n      signOut,\n      getToken\n    };\n  }\n\n  if (!!sessionId && !!userId && !!orgId && !!orgRole) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId,\n      orgRole,\n      orgSlug: orgSlug || null,\n      has,\n      signOut,\n      getToken\n    };\n  }\n\n  if (!!sessionId && !!userId && !orgId) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has: () => false,\n      signOut,\n      getToken\n    };\n  }\n\n  return errorThrower.throw(invalidStateError);\n}; // src/hooks/useEmailLink.ts\n\n\nimport React from \"react\";\n\nfunction useEmailLink(resource) {\n  const {\n    startEmailLinkFlow,\n    cancelEmailLinkFlow\n  } = React.useMemo(() => resource.createEmailLinkFlow(), [resource]);\n  React.useEffect(() => {\n    return cancelEmailLinkFlow;\n  }, []);\n  return {\n    startEmailLinkFlow,\n    cancelEmailLinkFlow\n  };\n} // src/hooks/useSignIn.ts\n\n\nimport { useClientContext } from \"@clerk/shared/react\";\nimport { eventMethodCalled } from \"@clerk/shared/telemetry\";\n\nvar useSignIn = () => {\n  var _a;\n\n  useAssertWrappedByClerkProvider(\"useSignIn\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = useClientContext();\n  (_a = isomorphicClerk.telemetry) == null ? void 0 : _a.record(eventMethodCalled(\"useSignIn\"));\n\n  if (!client) {\n    return {\n      isLoaded: false,\n      signIn: void 0,\n      setActive: void 0\n    };\n  }\n\n  return {\n    isLoaded: true,\n    signIn: client.signIn,\n    setActive: isomorphicClerk.setActive\n  };\n}; // src/hooks/useSignUp.ts\n\n\nimport { useClientContext as useClientContext2 } from \"@clerk/shared/react\";\nimport { eventMethodCalled as eventMethodCalled2 } from \"@clerk/shared/telemetry\";\n\nvar useSignUp = () => {\n  var _a;\n\n  useAssertWrappedByClerkProvider(\"useSignUp\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = useClientContext2();\n  (_a = isomorphicClerk.telemetry) == null ? void 0 : _a.record(eventMethodCalled2(\"useSignUp\"));\n\n  if (!client) {\n    return {\n      isLoaded: false,\n      signUp: void 0,\n      setActive: void 0\n    };\n  }\n\n  return {\n    isLoaded: true,\n    signUp: client.signUp,\n    setActive: isomorphicClerk.setActive\n  };\n}; // src/hooks/index.ts\n\n\nimport { useClerk, useOrganization, useOrganizationList, useSessionList, useUser, useSession } from \"@clerk/shared/react\"; // src/components/controlComponents.tsx\n\nimport React3 from \"react\"; // src/contexts/SessionContext.tsx\n\nimport { SessionContext, useSessionContext } from \"@clerk/shared/react\"; // src/components/withClerk.tsx\n\nimport React2 from \"react\";\n\nvar withClerk = (Component, displayName) => {\n  displayName = displayName || Component.displayName || Component.name || \"Component\";\n  Component.displayName = displayName;\n\n  const HOC = props => {\n    useAssertWrappedByClerkProvider(displayName || \"withClerk\");\n    const clerk = useIsomorphicClerkContext();\n\n    if (!clerk.loaded) {\n      return null;\n    }\n\n    return /* @__PURE__ */React2.createElement(Component, { ...props,\n      clerk\n    });\n  };\n\n  HOC.displayName = `withClerk(${displayName})`;\n  return HOC;\n}; // src/components/controlComponents.tsx\n\n\nvar SignedIn = _ref => {\n  let {\n    children\n  } = _ref;\n  useAssertWrappedByClerkProvider(\"SignedIn\");\n  const {\n    userId\n  } = useAuthContext();\n\n  if (userId) {\n    return /* @__PURE__ */React3.createElement(React3.Fragment, null, children);\n  }\n\n  return null;\n};\n\nvar SignedOut = _ref2 => {\n  let {\n    children\n  } = _ref2;\n  useAssertWrappedByClerkProvider(\"SignedOut\");\n  const {\n    userId\n  } = useAuthContext();\n\n  if (userId === null) {\n    return /* @__PURE__ */React3.createElement(React3.Fragment, null, children);\n  }\n\n  return null;\n};\n\nvar ClerkLoaded = _ref3 => {\n  let {\n    children\n  } = _ref3;\n  useAssertWrappedByClerkProvider(\"ClerkLoaded\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n\n  if (!isomorphicClerk.loaded) {\n    return null;\n  }\n\n  return /* @__PURE__ */React3.createElement(React3.Fragment, null, children);\n};\n\nvar ClerkLoading = _ref4 => {\n  let {\n    children\n  } = _ref4;\n  useAssertWrappedByClerkProvider(\"ClerkLoading\");\n  const isomorphicClerk = useIsomorphicClerkContext();\n\n  if (isomorphicClerk.loaded) {\n    return null;\n  }\n\n  return /* @__PURE__ */React3.createElement(React3.Fragment, null, children);\n};\n\nvar Protect = _ref5 => {\n  let {\n    children,\n    fallback,\n    ...restAuthorizedParams\n  } = _ref5;\n  useAssertWrappedByClerkProvider(\"Protect\");\n  const {\n    isLoaded,\n    has,\n    userId\n  } = useAuth();\n\n  if (!isLoaded) {\n    return null;\n  }\n\n  const unauthorized = /* @__PURE__ */React3.createElement(React3.Fragment, null, fallback != null ? fallback : null);\n  const authorized = /* @__PURE__ */React3.createElement(React3.Fragment, null, children);\n\n  if (!userId) {\n    return unauthorized;\n  }\n\n  if (typeof restAuthorizedParams.condition === \"function\") {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n\n    return unauthorized;\n  }\n\n  if (restAuthorizedParams.role || restAuthorizedParams.permission) {\n    if (has(restAuthorizedParams)) {\n      return authorized;\n    }\n\n    return unauthorized;\n  }\n\n  return authorized;\n};\n\nvar RedirectToSignIn = withClerk(_ref6 => {\n  let {\n    clerk,\n    ...props\n  } = _ref6;\n  const {\n    client,\n    session\n  } = clerk;\n  const hasActiveSessions = client.activeSessions && client.activeSessions.length > 0;\n  React3.useEffect(() => {\n    if (session === null && hasActiveSessions) {\n      void clerk.redirectToAfterSignOut();\n    } else {\n      void clerk.redirectToSignIn(props);\n    }\n  }, []);\n  return null;\n}, \"RedirectToSignIn\");\nvar RedirectToSignUp = withClerk(_ref7 => {\n  let {\n    clerk,\n    ...props\n  } = _ref7;\n  React3.useEffect(() => {\n    void clerk.redirectToSignUp(props);\n  }, []);\n  return null;\n}, \"RedirectToSignUp\");\nvar RedirectToUserProfile = withClerk(_ref8 => {\n  let {\n    clerk\n  } = _ref8;\n  React3.useEffect(() => {\n    void clerk.redirectToUserProfile();\n  }, []);\n  return null;\n}, \"RedirectToUserProfile\");\nvar RedirectToOrganizationProfile = withClerk(_ref9 => {\n  let {\n    clerk\n  } = _ref9;\n  React3.useEffect(() => {\n    void clerk.redirectToOrganizationProfile();\n  }, []);\n  return null;\n}, \"RedirectToOrganizationProfile\");\nvar RedirectToCreateOrganization = withClerk(_ref10 => {\n  let {\n    clerk\n  } = _ref10;\n  React3.useEffect(() => {\n    void clerk.redirectToCreateOrganization();\n  }, []);\n  return null;\n}, \"RedirectToCreateOrganization\");\nvar AuthenticateWithRedirectCallback = withClerk(_ref11 => {\n  let {\n    clerk,\n    ...handleRedirectCallbackParams\n  } = _ref11;\n  React3.useEffect(() => {\n    void clerk.handleRedirectCallback(handleRedirectCallbackParams);\n  }, []);\n  return null;\n}, \"AuthenticateWithRedirectCallback\");\n\nvar MultisessionAppSupport = _ref12 => {\n  let {\n    children\n  } = _ref12;\n  useAssertWrappedByClerkProvider(\"MultisessionAppSupport\");\n  const session = useSessionContext();\n  return /* @__PURE__ */React3.createElement(React3.Fragment, {\n    key: session ? session.id : \"no-users\"\n  }, children);\n};\n\nexport { errorThrower, setErrorThrowerOptions, multipleClerkProvidersError, multipleChildrenInButtonComponent, unsupportedNonBrowserDomainOrProxyUrlFunction, userProfilePageRenderedError, userProfileLinkRenderedError, organizationProfilePageRenderedError, organizationProfileLinkRenderedError, customPagesIgnoredComponent, customPageWrongProps, customLinkWrongProps, noPathProvidedError, incompatibleRoutingWithPathProvidedError, loadClerkJsScript, clerkJsScriptUrl, buildClerkJsScriptAttributes, IsomorphicClerkContext, withClerk, AuthContext, useAuth, useEmailLink, useSignIn, useSignUp, useClerk, useOrganization, useOrganizationList, useSessionList, useUser, useSession, SignedIn, SignedOut, ClerkLoaded, ClerkLoading, Protect, RedirectToSignIn, RedirectToSignUp, RedirectToUserProfile, RedirectToOrganizationProfile, RedirectToCreateOrganization, AuthenticateWithRedirectCallback, MultisessionAppSupport };","map":{"version":3,"mappings":"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","names":["buildErrorThrower","errorThrower","packageName","setErrorThrowerOptions","options","setMessages","setPackageName","parsePublishableKey","loadScript","isValidProxyUrl","proxyUrlToAbsoluteURL","addClerkPrefix","createDevOrStagingUrlCache","isDevOrStagingUrl","versionSelector","clerkJSVersion","packageVersion","prereleaseTag","getPrereleaseTag","getMajorVersion","trim","replace","match","split","FAILED_TO_LOAD_ERROR","loadClerkJsScript","opts","publishableKey","throwMissingPublishableKeyError","existingScript","document","querySelector","Promise","resolve","reject","addEventListener","clerkJsScriptUrl","async","crossOrigin","beforeLoad","applyClerkJsScriptAttributes","catch","Error","clerkJSUrl","clerkJSVariant","proxyUrl","domain","scriptHost","_a","frontendApi","_b","variant","version","buildClerkJsScriptAttributes","obj","script","attributes","attribute","setAttribute","useCallback","createContextAndHook","AuthContext","useAuthContext","ClerkInstanceContext","useClerkInstanceContext","IsomorphicClerkContext","useIsomorphicClerkContext","multipleClerkProvidersError","multipleChildrenInButtonComponent","name","invalidStateError","unsupportedNonBrowserDomainOrProxyUrlFunction","userProfilePageRenderedError","userProfileLinkRenderedError","organizationProfilePageRenderedError","organizationProfileLinkRenderedError","customPagesIgnoredComponent","componentName","customPageWrongProps","customLinkWrongProps","useAuthHasRequiresRoleOrPermission","noPathProvidedError","incompatibleRoutingWithPathProvidedError","useAssertWrappedByClerkProvider","useSharedAssertWrappedByClerkProvider","source","throwMissingClerkProviderError","clerkLoaded","isomorphicClerk","loaded","addOnLoaded","createGetToken","session","getToken","createSignOut","signOut","useAuth","sessionId","userId","actor","orgId","orgRole","orgSlug","orgPermissions","has","params","permission","role","throw","includes","isLoaded","isSignedIn","React","useEmailLink","resource","startEmailLinkFlow","cancelEmailLinkFlow","useMemo","createEmailLinkFlow","useEffect","useClientContext","eventMethodCalled","useSignIn","client","telemetry","record","signIn","setActive","useSignUp","signUp","useClerk","useOrganization","useOrganizationList","useSessionList","useUser","useSession","SessionContext","useSessionContext","withClerk","Component","displayName","HOC","props","clerk","SignedIn","children","SignedOut","ClerkLoaded","ClerkLoading","Protect","fallback","restAuthorizedParams","unauthorized","authorized","condition","RedirectToSignIn","hasActiveSessions","activeSessions","length","redirectToAfterSignOut","redirectToSignIn","RedirectToSignUp","redirectToSignUp","RedirectToUserProfile","redirectToUserProfile","RedirectToOrganizationProfile","redirectToOrganizationProfile","RedirectToCreateOrganization","redirectToCreateOrganization","AuthenticateWithRedirectCallback","handleRedirectCallbackParams","handleRedirectCallback","MultisessionAppSupport","Fragment","key","id"],"sources":["/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/errors/errorThrower.ts","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/utils/loadClerkJsScript.ts","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/utils/isDevOrStageUrl.tsx","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/utils/versionSelector.ts","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/hooks/useAuth.ts","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/contexts/AuthContext.ts","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/contexts/IsomorphicClerkContext.tsx","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/errors/messages.ts","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/hooks/useAssertWrappedByClerkProvider.ts","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/hooks/utils.ts","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/hooks/useEmailLink.ts","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/hooks/useSignIn.ts","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/hooks/useSignUp.ts","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/hooks/index.ts","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/components/controlComponents.tsx","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/contexts/SessionContext.tsx","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/clerk-react/src/components/withClerk.tsx"],"sourcesContent":["import type { ErrorThrowerOptions } from '@clerk/shared/error';\nimport { buildErrorThrower } from '@clerk/shared/error';\n\nconst errorThrower = buildErrorThrower({ packageName: '@clerk/clerk-react' });\n\nexport { errorThrower };\n\n/**\n * Overrides options of the internal errorThrower (eg setting packageName prefix).\n *\n * @internal\n */\nexport function setErrorThrowerOptions(options: ErrorThrowerOptions) {\n  errorThrower.setMessages(options).setPackageName(options);\n}\n","import { parsePublishableKey } from '@clerk/shared/keys';\nimport { loadScript } from '@clerk/shared/loadScript';\nimport { isValidProxyUrl, proxyUrlToAbsoluteURL } from '@clerk/shared/proxy';\nimport { addClerkPrefix } from '@clerk/shared/url';\n\nimport { errorThrower } from '../errors/errorThrower';\nimport type { IsomorphicClerkOptions } from '../types';\nimport { isDevOrStagingUrl } from './isDevOrStageUrl';\nimport { versionSelector } from './versionSelector';\n\nconst FAILED_TO_LOAD_ERROR = 'Clerk: Failed to load Clerk';\n\ntype LoadClerkJsScriptOptions = Omit<IsomorphicClerkOptions, 'proxyUrl' | 'domain'> & {\n  proxyUrl?: string;\n  domain?: string;\n};\n\nconst loadClerkJsScript = (opts: LoadClerkJsScriptOptions) => {\n  const { publishableKey } = opts;\n\n  if (!publishableKey) {\n    errorThrower.throwMissingPublishableKeyError();\n  }\n\n  const existingScript = document.querySelector<HTMLScriptElement>('script[data-clerk-js-script]');\n\n  if (existingScript) {\n    return new Promise((resolve, reject) => {\n      existingScript.addEventListener('load', () => {\n        resolve(existingScript);\n      });\n\n      existingScript.addEventListener('error', () => {\n        reject(FAILED_TO_LOAD_ERROR);\n      });\n    });\n  }\n\n  return loadScript(clerkJsScriptUrl(opts), {\n    async: true,\n    crossOrigin: 'anonymous',\n    beforeLoad: applyClerkJsScriptAttributes(opts),\n  }).catch(() => {\n    throw new Error(FAILED_TO_LOAD_ERROR);\n  });\n};\n\nconst clerkJsScriptUrl = (opts: LoadClerkJsScriptOptions) => {\n  const { clerkJSUrl, clerkJSVariant, clerkJSVersion, proxyUrl, domain, publishableKey } = opts;\n\n  if (clerkJSUrl) {\n    return clerkJSUrl;\n  }\n\n  let scriptHost = '';\n  if (!!proxyUrl && isValidProxyUrl(proxyUrl)) {\n    scriptHost = proxyUrlToAbsoluteURL(proxyUrl).replace(/http(s)?:\\/\\//, '');\n  } else if (domain && !isDevOrStagingUrl(parsePublishableKey(publishableKey)?.frontendApi || '')) {\n    scriptHost = addClerkPrefix(domain);\n  } else {\n    scriptHost = parsePublishableKey(publishableKey)?.frontendApi || '';\n  }\n\n  const variant = clerkJSVariant ? `${clerkJSVariant.replace(/\\.+$/, '')}.` : '';\n  const version = versionSelector(clerkJSVersion);\n  return `https://${scriptHost}/npm/@clerk/clerk-js@${version}/dist/clerk.${variant}browser.js`;\n};\n\nconst buildClerkJsScriptAttributes = (options: LoadClerkJsScriptOptions) => {\n  const obj: Record<string, string> = {};\n\n  if (options.publishableKey) {\n    obj['data-clerk-publishable-key'] = options.publishableKey;\n  }\n\n  if (options.proxyUrl) {\n    obj['data-clerk-proxy-url'] = options.proxyUrl;\n  }\n\n  if (options.domain) {\n    obj['data-clerk-domain'] = options.domain;\n  }\n\n  return obj;\n};\n\nconst applyClerkJsScriptAttributes = (options: LoadClerkJsScriptOptions) => (script: HTMLScriptElement) => {\n  const attributes = buildClerkJsScriptAttributes(options);\n  for (const attribute in attributes) {\n    script.setAttribute(attribute, attributes[attribute]);\n  }\n};\n\nexport { loadClerkJsScript, buildClerkJsScriptAttributes, clerkJsScriptUrl };\nexport type { LoadClerkJsScriptOptions };\n","import { createDevOrStagingUrlCache } from '@clerk/shared/keys';\nconst { isDevOrStagingUrl } = createDevOrStagingUrlCache();\nexport { isDevOrStagingUrl };\n","/**\n * This version selector is a bit complicated, so here is the flow:\n * 1. Use the clerkJSVersion prop on the provider\n * 2. Use the exact `@clerk/clerk-js` version if it is a `@snapshot` prerelease for `@clerk/clerk-react`\n * 3. Use the prerelease tag of `@clerk/clerk-react`\n * 4. Fallback to the major version of `@clerk/clerk-react`\n * @param clerkJSVersion - The optional clerkJSVersion prop on the provider\n * @param packageVersion - The version of `@clerk/clerk-react` that will be used if an explicit version is not provided\n * @returns The npm tag, version or major version to use\n */\nexport const versionSelector = (clerkJSVersion: string | undefined, packageVersion = PACKAGE_VERSION) => {\n  if (clerkJSVersion) {\n    return clerkJSVersion;\n  }\n\n  const prereleaseTag = getPrereleaseTag(packageVersion);\n  if (prereleaseTag) {\n    if (prereleaseTag === 'snapshot') {\n      return JS_PACKAGE_VERSION;\n    }\n\n    return prereleaseTag;\n  }\n\n  return getMajorVersion(packageVersion);\n};\n\nconst getPrereleaseTag = (packageVersion: string) =>\n  packageVersion\n    .trim()\n    .replace(/^v/, '')\n    .match(/-(.+?)(\\.|$)/)?.[1];\n\nconst getMajorVersion = (packageVersion: string) => packageVersion.trim().replace(/^v/, '').split('.')[0];\n","import type {\n  ActJWTClaim,\n  CheckAuthorizationWithCustomPermissions,\n  GetToken,\n  OrganizationCustomRoleKey,\n  SignOut,\n} from '@clerk/types';\nimport { useCallback } from 'react';\n\nimport { useAuthContext } from '../contexts/AuthContext';\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { errorThrower } from '../errors/errorThrower';\nimport { invalidStateError, useAuthHasRequiresRoleOrPermission } from '../errors/messages';\nimport { useAssertWrappedByClerkProvider } from './useAssertWrappedByClerkProvider';\nimport { createGetToken, createSignOut } from './utils';\n\ntype CheckAuthorizationSignedOut = undefined;\ntype CheckAuthorizationWithoutOrgOrUser = (params?: Parameters<CheckAuthorizationWithCustomPermissions>[0]) => false;\n\ntype UseAuthReturn =\n  | {\n      isLoaded: false;\n      isSignedIn: undefined;\n      userId: undefined;\n      sessionId: undefined;\n      actor: undefined;\n      orgId: undefined;\n      orgRole: undefined;\n      orgSlug: undefined;\n      has: CheckAuthorizationSignedOut;\n      signOut: SignOut;\n      getToken: GetToken;\n    }\n  | {\n      isLoaded: true;\n      isSignedIn: false;\n      userId: null;\n      sessionId: null;\n      actor: null;\n      orgId: null;\n      orgRole: null;\n      orgSlug: null;\n      has: CheckAuthorizationWithoutOrgOrUser;\n      signOut: SignOut;\n      getToken: GetToken;\n    }\n  | {\n      isLoaded: true;\n      isSignedIn: true;\n      userId: string;\n      sessionId: string;\n      actor: ActJWTClaim | null;\n      orgId: null;\n      orgRole: null;\n      orgSlug: null;\n      has: CheckAuthorizationWithoutOrgOrUser;\n      signOut: SignOut;\n      getToken: GetToken;\n    }\n  | {\n      isLoaded: true;\n      isSignedIn: true;\n      userId: string;\n      sessionId: string;\n      actor: ActJWTClaim | null;\n      orgId: string;\n      orgRole: OrganizationCustomRoleKey;\n      orgSlug: string | null;\n      has: CheckAuthorizationWithCustomPermissions;\n      signOut: SignOut;\n      getToken: GetToken;\n    };\n\ntype UseAuth = () => UseAuthReturn;\n\n/**\n * Returns the current auth state, the user and session ids and the `getToken`\n * that can be used to retrieve the given template or the default Clerk token.\n *\n * Until Clerk loads, `isLoaded` will be set to `false`.\n * Once Clerk loads, `isLoaded` will be set to `true`, and you can\n * safely access the `userId` and `sessionId` variables.\n *\n * For projects using NextJs or Remix, you can have immediate access to this data during SSR\n * simply by using the `ClerkProvider`.\n *\n * @example\n * A simple example:\n *\n * import { useAuth } from '@clerk/clerk-react'\n *\n * function Hello() {\n *   const { isSignedIn, sessionId, userId } = useAuth();\n *   if(isSignedIn) {\n *     return null;\n *   }\n *   console.log(sessionId, userId)\n *   return <div>...</div>\n * }\n *\n * @example\n * Basic example in a NextJs app. This page will be fully rendered during SSR:\n *\n * import { useAuth } from '@clerk/nextjs'\n *\n * export HelloPage = () => {\n *   const { isSignedIn, sessionId, userId } = useAuth();\n *   console.log(isSignedIn, sessionId, userId)\n *   return <div>...</div>\n * }\n */\nexport const useAuth: UseAuth = () => {\n  useAssertWrappedByClerkProvider('useAuth');\n\n  const { sessionId, userId, actor, orgId, orgRole, orgSlug, orgPermissions } = useAuthContext();\n  const isomorphicClerk = useIsomorphicClerkContext();\n\n  const getToken: GetToken = useCallback(createGetToken(isomorphicClerk), [isomorphicClerk]);\n  const signOut: SignOut = useCallback(createSignOut(isomorphicClerk), [isomorphicClerk]);\n\n  const has = useCallback(\n    (params: Parameters<CheckAuthorizationWithCustomPermissions>[0]) => {\n      if (!params?.permission && !params?.role) {\n        errorThrower.throw(useAuthHasRequiresRoleOrPermission);\n      }\n\n      if (!orgId || !userId || !orgRole || !orgPermissions) {\n        return false;\n      }\n\n      if (params.permission) {\n        return orgPermissions.includes(params.permission);\n      }\n\n      if (params.role) {\n        return orgRole === params.role;\n      }\n\n      return false;\n    },\n    [orgId, orgRole, userId, orgPermissions],\n  );\n\n  if (sessionId === undefined && userId === undefined) {\n    return {\n      isLoaded: false,\n      isSignedIn: undefined,\n      sessionId,\n      userId,\n      actor: undefined,\n      orgId: undefined,\n      orgRole: undefined,\n      orgSlug: undefined,\n      has: undefined,\n      signOut,\n      getToken,\n    };\n  }\n\n  if (sessionId === null && userId === null) {\n    return {\n      isLoaded: true,\n      isSignedIn: false,\n      sessionId,\n      userId,\n      actor: null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has: () => false,\n      signOut,\n      getToken,\n    };\n  }\n\n  if (!!sessionId && !!userId && !!orgId && !!orgRole) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId,\n      orgRole,\n      orgSlug: orgSlug || null,\n      has,\n      signOut,\n      getToken,\n    };\n  }\n\n  if (!!sessionId && !!userId && !orgId) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      has: () => false,\n      signOut,\n      getToken,\n    };\n  }\n\n  return errorThrower.throw(invalidStateError);\n};\n","import { createContextAndHook } from '@clerk/shared/react';\nimport type { ActJWTClaim, OrganizationCustomPermissionKey, OrganizationCustomRoleKey } from '@clerk/types';\n\nexport const [AuthContext, useAuthContext] = createContextAndHook<{\n  userId: string | null | undefined;\n  sessionId: string | null | undefined;\n  actor: ActJWTClaim | null | undefined;\n  orgId: string | null | undefined;\n  orgRole: OrganizationCustomRoleKey | null | undefined;\n  orgSlug: string | null | undefined;\n  orgPermissions: OrganizationCustomPermissionKey[] | null | undefined;\n}>('AuthContext');\n","import { ClerkInstanceContext, useClerkInstanceContext } from '@clerk/shared/react';\n\nimport type { IsomorphicClerk } from '../isomorphicClerk';\n\nexport const IsomorphicClerkContext = ClerkInstanceContext;\nexport const useIsomorphicClerkContext = useClerkInstanceContext as unknown as () => IsomorphicClerk;\n","export const noClerkProviderError = 'You must wrap your application in a <ClerkProvider> component.';\n\nexport const multipleClerkProvidersError =\n  \"You've added multiple <ClerkProvider> components in your React component tree. Wrap your components in a single <ClerkProvider>.\";\n\nexport const hocChildrenNotAFunctionError = 'Child of WithClerk must be a function.';\n\nexport const multipleChildrenInButtonComponent = (name: string) =>\n  `You've passed multiple children components to <${name}/>. You can only pass a single child component or text.`;\n\nexport const invalidStateError =\n  'Invalid state. Feel free to submit a bug or reach out to support here: https://clerk.com/support';\n\nexport const unsupportedNonBrowserDomainOrProxyUrlFunction =\n  'Unsupported usage of isSatellite, domain or proxyUrl. The usage of isSatellite, domain or proxyUrl as function is not supported in non-browser environments.';\n\nexport const userProfilePageRenderedError =\n  '<UserProfile.Page /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.';\nexport const userProfileLinkRenderedError =\n  '<UserProfile.Link /> component needs to be a direct child of `<UserProfile />` or `<UserButton />`.';\n\nexport const organizationProfilePageRenderedError =\n  '<OrganizationProfile.Page /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.';\nexport const organizationProfileLinkRenderedError =\n  '<OrganizationProfile.Link /> component needs to be a direct child of `<OrganizationProfile />` or `<OrganizationSwitcher />`.';\n\nexport const customPagesIgnoredComponent = (componentName: string) =>\n  `<${componentName} /> can only accept <${componentName}.Page /> and <${componentName}.Link /> as its children. Any other provided component will be ignored.`;\n\nexport const customPageWrongProps = (componentName: string) =>\n  `Missing props. <${componentName}.Page /> component requires the following props: url, label, labelIcon, alongside with children to be rendered inside the page.`;\n\nexport const customLinkWrongProps = (componentName: string) =>\n  `Missing props. <${componentName}.Link /> component requires the following props: url, label and labelIcon.`;\n\nexport const useAuthHasRequiresRoleOrPermission =\n  'Missing parameters. `has` from `useAuth` requires a permission or role key to be passed. Example usage: `has({permission: \"org:posts:edit\"`';\n\nexport const noPathProvidedError = (componentName: string) =>\n  `The <${componentName}/> component uses path-based routing by default unless a different routing strategy is provided using the \\`routing\\` prop. When path-based routing is used, you need to provide the path where the component is mounted on by using the \\`path\\` prop. Example: <${componentName} path={'/my-path'} />`;\n\nexport const incompatibleRoutingWithPathProvidedError = (componentName: string) =>\n  `The \\`path\\` prop will only be respected when the Clerk component uses path-based routing. To resolve this error, pass \\`routing='path'\\` to the <${componentName}/> component, or drop the \\`path\\` prop to switch to hash-based routing. For more details please refer to our docs: https://clerk.com/docs`;\n","import { useAssertWrappedByClerkProvider as useSharedAssertWrappedByClerkProvider } from '@clerk/shared/react';\n\nimport { errorThrower } from '../errors/errorThrower';\n\nexport const useAssertWrappedByClerkProvider = (source: string): void => {\n  useSharedAssertWrappedByClerkProvider(() => {\n    errorThrower.throwMissingClerkProviderError({ source });\n  });\n};\n","import type { IsomorphicClerk } from '../isomorphicClerk';\n\n/**\n * @internal\n */\nconst clerkLoaded = (isomorphicClerk: IsomorphicClerk) => {\n  return new Promise<void>(resolve => {\n    if (isomorphicClerk.loaded) {\n      resolve();\n    }\n    isomorphicClerk.addOnLoaded(resolve);\n  });\n};\n\n/**\n * @internal\n */\nexport const createGetToken = (isomorphicClerk: IsomorphicClerk) => {\n  return async (options: any) => {\n    await clerkLoaded(isomorphicClerk);\n    if (!isomorphicClerk.session) {\n      return null;\n    }\n    return isomorphicClerk.session.getToken(options);\n  };\n};\n\n/**\n * @internal\n */\nexport const createSignOut = (isomorphicClerk: IsomorphicClerk) => {\n  return async (...args: any) => {\n    await clerkLoaded(isomorphicClerk);\n    return isomorphicClerk.signOut(...args);\n  };\n};\n","import type {\n  CreateEmailLinkFlowReturn,\n  EmailAddressResource,\n  SignInResource,\n  SignInStartEmailLinkFlowParams,\n  SignUpResource,\n  StartEmailLinkFlowParams,\n} from '@clerk/types';\nimport React from 'react';\n\ntype EmailLinkable = SignUpResource | EmailAddressResource | SignInResource;\ntype UseEmailLinkSignInReturn = CreateEmailLinkFlowReturn<SignInStartEmailLinkFlowParams, SignInResource>;\ntype UseEmailLinkSignUpReturn = CreateEmailLinkFlowReturn<StartEmailLinkFlowParams, SignUpResource>;\ntype UseEmailLinkEmailAddressReturn = CreateEmailLinkFlowReturn<StartEmailLinkFlowParams, EmailAddressResource>;\n\nfunction useEmailLink(resource: SignInResource): UseEmailLinkSignInReturn;\nfunction useEmailLink(resource: SignUpResource): UseEmailLinkSignUpReturn;\nfunction useEmailLink(resource: EmailAddressResource): UseEmailLinkEmailAddressReturn;\nfunction useEmailLink(\n  resource: EmailLinkable,\n): UseEmailLinkSignInReturn | UseEmailLinkSignUpReturn | UseEmailLinkEmailAddressReturn {\n  const { startEmailLinkFlow, cancelEmailLinkFlow } = React.useMemo(() => resource.createEmailLinkFlow(), [resource]);\n\n  React.useEffect(() => {\n    return cancelEmailLinkFlow;\n  }, []);\n\n  return {\n    startEmailLinkFlow,\n    cancelEmailLinkFlow,\n  } as UseEmailLinkSignInReturn | UseEmailLinkSignUpReturn | UseEmailLinkEmailAddressReturn;\n}\n\nexport { useEmailLink };\n","import { useClientContext } from '@clerk/shared/react';\nimport { eventMethodCalled } from '@clerk/shared/telemetry';\nimport type { SetActive, SignInResource } from '@clerk/types';\n\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { useAssertWrappedByClerkProvider } from './useAssertWrappedByClerkProvider';\n\ntype UseSignInReturn =\n  | {\n      isLoaded: false;\n      signIn: undefined;\n      setActive: undefined;\n    }\n  | {\n      isLoaded: true;\n      signIn: SignInResource;\n      setActive: SetActive;\n    };\n\ntype UseSignIn = () => UseSignInReturn;\n\nexport const useSignIn: UseSignIn = () => {\n  useAssertWrappedByClerkProvider('useSignIn');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = useClientContext();\n\n  isomorphicClerk.telemetry?.record(eventMethodCalled('useSignIn'));\n\n  if (!client) {\n    return { isLoaded: false, signIn: undefined, setActive: undefined };\n  }\n\n  return {\n    isLoaded: true,\n    signIn: client.signIn,\n    setActive: isomorphicClerk.setActive,\n  };\n};\n","import { useClientContext } from '@clerk/shared/react';\nimport { eventMethodCalled } from '@clerk/shared/telemetry';\nimport type { SetActive, SignUpResource } from '@clerk/types';\n\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { useAssertWrappedByClerkProvider } from './useAssertWrappedByClerkProvider';\n\ntype UseSignUpReturn =\n  | {\n      isLoaded: false;\n      signUp: undefined;\n      setActive: undefined;\n    }\n  | {\n      isLoaded: true;\n      signUp: SignUpResource;\n      setActive: SetActive;\n    };\n\ntype UseSignUp = () => UseSignUpReturn;\n\nexport const useSignUp: UseSignUp = () => {\n  useAssertWrappedByClerkProvider('useSignUp');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const client = useClientContext();\n\n  isomorphicClerk.telemetry?.record(eventMethodCalled('useSignUp'));\n\n  if (!client) {\n    return { isLoaded: false, signUp: undefined, setActive: undefined };\n  }\n\n  return {\n    isLoaded: true,\n    signUp: client.signUp,\n    setActive: isomorphicClerk.setActive,\n  };\n};\n","export { useAuth } from './useAuth';\nexport { useEmailLink } from './useEmailLink';\nexport { useSignIn } from './useSignIn';\nexport { useSignUp } from './useSignUp';\nexport {\n  useClerk,\n  useOrganization,\n  useOrganizationList,\n  useSessionList,\n  useUser,\n  useSession,\n} from '@clerk/shared/react';\n","import type {\n  CheckAuthorizationWithCustomPermissions,\n  HandleOAuthCallbackParams,\n  OrganizationCustomPermissionKey,\n  OrganizationCustomRoleKey,\n} from '@clerk/types';\nimport React from 'react';\n\nimport { useAuthContext } from '../contexts/AuthContext';\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { useSessionContext } from '../contexts/SessionContext';\nimport { useAuth } from '../hooks';\nimport { useAssertWrappedByClerkProvider } from '../hooks/useAssertWrappedByClerkProvider';\nimport type { RedirectToSignInProps, RedirectToSignUpProps, WithClerkProp } from '../types';\nimport { withClerk } from './withClerk';\n\nexport const SignedIn = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  useAssertWrappedByClerkProvider('SignedIn');\n\n  const { userId } = useAuthContext();\n  if (userId) {\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport const SignedOut = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  useAssertWrappedByClerkProvider('SignedOut');\n\n  const { userId } = useAuthContext();\n  if (userId === null) {\n    return <>{children}</>;\n  }\n  return null;\n};\n\nexport const ClerkLoaded = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  useAssertWrappedByClerkProvider('ClerkLoaded');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (!isomorphicClerk.loaded) {\n    return null;\n  }\n  return <>{children}</>;\n};\n\nexport const ClerkLoading = ({ children }: React.PropsWithChildren<unknown>): JSX.Element | null => {\n  useAssertWrappedByClerkProvider('ClerkLoading');\n\n  const isomorphicClerk = useIsomorphicClerkContext();\n  if (isomorphicClerk.loaded) {\n    return null;\n  }\n  return <>{children}</>;\n};\n\nexport type ProtectProps = React.PropsWithChildren<\n  (\n    | {\n        condition?: never;\n        role: OrganizationCustomRoleKey;\n        permission?: never;\n      }\n    | {\n        condition?: never;\n        role?: never;\n        permission: OrganizationCustomPermissionKey;\n      }\n    | {\n        condition: (has: CheckAuthorizationWithCustomPermissions) => boolean;\n        role?: never;\n        permission?: never;\n      }\n    | {\n        condition?: never;\n        role?: never;\n        permission?: never;\n      }\n  ) & {\n    fallback?: React.ReactNode;\n  }\n>;\n\n/**\n * Use `<Protect/>` in order to prevent unauthenticated or unauthorized users from accessing the children passed to the component.\n *\n * Examples:\n * ```\n * <Protect permission=\"a_permission_key\" />\n * <Protect role=\"a_role_key\" />\n * <Protect condition={(has) => has({permission:\"a_permission_key\"})} />\n * <Protect condition={(has) => has({role:\"a_role_key\"})} />\n * <Protect fallback={<p>Unauthorized</p>} />\n * ```\n */\nexport const Protect = ({ children, fallback, ...restAuthorizedParams }: ProtectProps) => {\n  useAssertWrappedByClerkProvider('Protect');\n\n  const { isLoaded, has, userId } = useAuth();\n\n  /**\n   * Avoid flickering children or fallback while clerk is loading sessionId or userId\n   */\n  if (!isLoaded) {\n    return null;\n  }\n\n  /**\n   * Fallback to UI provided by user or `null` if authorization checks failed\n   */\n  const unauthorized = <>{fallback ?? null}</>;\n\n  const authorized = <>{children}</>;\n\n  if (!userId) {\n    return unauthorized;\n  }\n\n  /**\n   * Check against the results of `has` called inside the callback\n   */\n  if (typeof restAuthorizedParams.condition === 'function') {\n    if (restAuthorizedParams.condition(has)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  if (restAuthorizedParams.role || restAuthorizedParams.permission) {\n    if (has(restAuthorizedParams)) {\n      return authorized;\n    }\n    return unauthorized;\n  }\n\n  /**\n   * If neither of the authorization params are passed behave as the `<SignedIn/>`.\n   * If fallback is present render that instead of rendering nothing.\n   */\n  return authorized;\n};\n/* eslint-enable react-hooks/rules-of-hooks */\n\nexport const RedirectToSignIn = withClerk(({ clerk, ...props }: WithClerkProp<RedirectToSignInProps>) => {\n  const { client, session } = clerk;\n  const hasActiveSessions = client.activeSessions && client.activeSessions.length > 0;\n\n  React.useEffect(() => {\n    if (session === null && hasActiveSessions) {\n      void clerk.redirectToAfterSignOut();\n    } else {\n      void clerk.redirectToSignIn(props);\n    }\n  }, []);\n\n  return null;\n}, 'RedirectToSignIn');\n\nexport const RedirectToSignUp = withClerk(({ clerk, ...props }: WithClerkProp<RedirectToSignUpProps>) => {\n  React.useEffect(() => {\n    void clerk.redirectToSignUp(props);\n  }, []);\n\n  return null;\n}, 'RedirectToSignUp');\n\nexport const RedirectToUserProfile = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    void clerk.redirectToUserProfile();\n  }, []);\n\n  return null;\n}, 'RedirectToUserProfile');\n\nexport const RedirectToOrganizationProfile = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    void clerk.redirectToOrganizationProfile();\n  }, []);\n\n  return null;\n}, 'RedirectToOrganizationProfile');\n\nexport const RedirectToCreateOrganization = withClerk(({ clerk }) => {\n  React.useEffect(() => {\n    void clerk.redirectToCreateOrganization();\n  }, []);\n\n  return null;\n}, 'RedirectToCreateOrganization');\n\nexport const AuthenticateWithRedirectCallback = withClerk(\n  ({ clerk, ...handleRedirectCallbackParams }: WithClerkProp<HandleOAuthCallbackParams>) => {\n    React.useEffect(() => {\n      void clerk.handleRedirectCallback(handleRedirectCallbackParams);\n    }, []);\n\n    return null;\n  },\n  'AuthenticateWithRedirectCallback',\n);\n\nexport const MultisessionAppSupport = ({ children }: React.PropsWithChildren<unknown>): JSX.Element => {\n  useAssertWrappedByClerkProvider('MultisessionAppSupport');\n\n  const session = useSessionContext();\n  return <React.Fragment key={session ? session.id : 'no-users'}>{children}</React.Fragment>;\n};\n","export { SessionContext, useSessionContext } from '@clerk/shared/react';\n","import type { LoadedClerk, Without } from '@clerk/types';\nimport React from 'react';\n\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { errorThrower } from '../errors/errorThrower';\nimport { hocChildrenNotAFunctionError } from '../errors/messages';\nimport { useAssertWrappedByClerkProvider } from '../hooks/useAssertWrappedByClerkProvider';\n\nexport const withClerk = <P extends { clerk: LoadedClerk }>(\n  Component: React.ComponentType<P>,\n  displayName?: string,\n) => {\n  displayName = displayName || Component.displayName || Component.name || 'Component';\n  Component.displayName = displayName;\n  const HOC = (props: Without<P, 'clerk'>) => {\n    useAssertWrappedByClerkProvider(displayName || 'withClerk');\n\n    const clerk = useIsomorphicClerkContext();\n\n    if (!clerk.loaded) {\n      return null;\n    }\n\n    return (\n      <Component\n        {...(props as P)}\n        clerk={clerk}\n      />\n    );\n  };\n  HOC.displayName = `withClerk(${displayName})`;\n  return HOC;\n};\n\nexport const WithClerk: React.FC<{\n  children: (clerk: LoadedClerk) => React.ReactNode;\n}> = ({ children }) => {\n  const clerk = useIsomorphicClerkContext();\n\n  if (typeof children !== 'function') {\n    errorThrower.throw(hocChildrenNotAFunctionError);\n  }\n\n  if (!clerk.loaded) {\n    return null;\n  }\n\n  return <>{children(clerk as unknown as LoadedClerk)}</>;\n};\n"]},"metadata":{},"sourceType":"module"}
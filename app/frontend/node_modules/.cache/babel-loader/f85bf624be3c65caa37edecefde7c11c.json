{"ast":null,"code":"// src/object.ts\nvar without = function (obj) {\n  const copy = { ...obj\n  };\n\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n\n  for (const prop of props) {\n    delete copy[prop];\n  }\n\n  return copy;\n};\n\nvar removeUndefined = obj => {\n  return Object.entries(obj).reduce((acc, _ref) => {\n    let [key, value] = _ref;\n\n    if (value !== void 0 && value !== null) {\n      acc[key] = value;\n    }\n\n    return acc;\n  }, {});\n};\n\nvar applyFunctionToObj = (obj, fn) => {\n  const result = {};\n\n  for (const key in obj) {\n    result[key] = fn(obj[key], key);\n  }\n\n  return result;\n};\n\nvar filterProps = (obj, filter) => {\n  const result = {};\n\n  for (const key in obj) {\n    if (obj[key] && filter(obj[key])) {\n      result[key] = obj[key];\n    }\n  }\n\n  return result;\n};\n\nexport { without, removeUndefined, applyFunctionToObj, filterProps };","map":{"version":3,"mappings":";AAAO,IAAMA,UAAU,UAAsCC,GAAtC,EAA4E;AACjG,QAAMC,OAAO,EAAE,GAAGD;AAAL,GAAb;;AADiG,oCAA3BE,KAA2B;AAA3BA,SAA2B;AAAA;;AAEjG,aAAWC,IAAX,IAAmBD,KAAnB,EAA0B;AACxB,WAAOD,KAAKE,IAAL,CAAP;AACF;;AACA,SAAOF,IAAP;AACF,CANO;;AAQA,IAAMG,kBAAqCJ,GAAnB,IAA0C;AACvE,SAAOK,OAAOC,OAAP,CAAeN,GAAf,EAAoBO,MAApB,CAA2B,CAACC,GAAD,WAAuB;AAAA,QAAjB,CAACC,GAAD,EAAMC,KAAN,CAAiB;;AACvD,QAAIA,UAAU,MAAV,IAAuBA,UAAU,IAArC,EAA2C;AACzCF,UAAIC,GAAJ,IAAsBC,KAAtB;AACF;;AACA,WAAOF,GAAP;AACF,GALO,EAKJ,EALI,CAAP;AAMF,CAPO;;AASA,IAAMG,qBAAqB,CAChCX,GADgC,EAEhCY,EAFgC,KAGV;AACtB,QAAMC,SAAS,EAAf;;AACA,aAAWJ,GAAX,IAAkBT,GAAlB,EAAuB;AACrBa,WAAOJ,GAAP,IAAcG,GAAGZ,IAAIS,GAAJ,CAAH,EAAaA,GAAb,CAAd;AACF;;AACA,SAAOI,MAAP;AACF,CATO;;AAWA,IAAMC,cAAc,CAAgCd,GAAhC,EAAwCe,MAAxC,KAA2E;AACpG,QAAMF,SAAS,EAAf;;AACA,aAAWJ,GAAX,IAAkBT,GAAlB,EAAuB;AACrB,QAAIA,IAAIS,GAAJ,KAAYM,OAAOf,IAAIS,GAAJ,CAAP,CAAhB,EAAkC;AAChCI,aAAOJ,GAAP,IAAcT,IAAIS,GAAJ,CAAd;AACF;AACF;;AACA,SAAOI,MAAP;AACF,CARO","names":["without","obj","copy","props","prop","removeUndefined","Object","entries","reduce","acc","key","value","applyFunctionToObj","fn","result","filterProps","filter"],"sources":["/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/shared/src/object.ts"],"sourcesContent":["export const without = <T extends object, P extends keyof T>(obj: T, ...props: P[]): Omit<T, P> => {\n  const copy = { ...obj };\n  for (const prop of props) {\n    delete copy[prop];\n  }\n  return copy;\n};\n\nexport const removeUndefined = <T extends object>(obj: T): Partial<T> => {\n  return Object.entries(obj).reduce((acc, [key, value]) => {\n    if (value !== undefined && value !== null) {\n      acc[key as keyof T] = value;\n    }\n    return acc;\n  }, {} as Partial<T>);\n};\n\nexport const applyFunctionToObj = <T extends Record<string, any>, R>(\n  obj: T,\n  fn: (val: any, key: string) => R,\n): Record<string, R> => {\n  const result = {} as Record<string, R>;\n  for (const key in obj) {\n    result[key] = fn(obj[key], key);\n  }\n  return result;\n};\n\nexport const filterProps = <T extends Record<string, any>>(obj: T, filter: (a: any) => boolean): T => {\n  const result = {} as T;\n  for (const key in obj) {\n    if (obj[key] && filter(obj[key])) {\n      result[key] = obj[key];\n    }\n  }\n  return result;\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// src/loadScript.ts\nvar NO_DOCUMENT_ERROR = \"loadScript cannot be called when document does not exist\";\nvar NO_SRC_ERROR = \"loadScript cannot be called without a src\";\n\nasync function loadScript() {\n  let src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let opts = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    async,\n    defer,\n    beforeLoad,\n    crossOrigin\n  } = opts || {};\n  return new Promise((resolve, reject) => {\n    if (!src) {\n      reject(NO_SRC_ERROR);\n    }\n\n    if (!document || !document.body) {\n      reject(NO_DOCUMENT_ERROR);\n    }\n\n    const script = document.createElement(\"script\");\n    crossOrigin && script.setAttribute(\"crossorigin\", crossOrigin);\n    script.async = async || false;\n    script.defer = defer || false;\n    script.addEventListener(\"load\", () => {\n      script.remove();\n      resolve(script);\n    });\n    script.addEventListener(\"error\", () => {\n      script.remove();\n      reject();\n    });\n    script.src = src;\n    beforeLoad == null ? void 0 : beforeLoad(script);\n    document.body.appendChild(script);\n  });\n}\n\nexport { loadScript };","map":{"version":3,"mappings":";AAAA,IAAMA,oBAAoB,0DAA1B;AACA,IAAMC,eAAe,2CAArB;;AASA,eAAsBC,UAAtB,GAAgG;AAAA,MAA/DC,GAA+D,uEAAzD,EAAyD;AAAA,MAArDC,IAAqD;AAC9F,QAAM;AAAEC,SAAF;AAASC,SAAT;AAAgBC,cAAhB;AAA4BC;AAA5B,MAA4CJ,QAAQ,EAA1D;AACA,SAAO,IAAIK,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,QAAI,CAACR,GAAL,EAAU;AACRQ,aAAOV,YAAP;AACF;;AAEA,QAAI,CAACW,QAAD,IAAa,CAACA,SAASC,IAA3B,EAAiC;AAC/BF,aAAOX,iBAAP;AACF;;AAEA,UAAMc,SAASF,SAASG,aAAT,CAAuB,QAAvB,CAAf;AAEAP,mBAAeM,OAAOE,YAAP,CAAoB,aAApB,EAAmCR,WAAnC,CAAf;AACAM,WAAOT,KAAP,GAAeA,SAAS,KAAxB;AACAS,WAAOR,KAAP,GAAeA,SAAS,KAAxB;AAEAQ,WAAOG,gBAAP,CAAwB,MAAxB,EAAgC,MAAM;AACpCH,aAAOI,MAAP;AACAR,cAAQI,MAAR;AACD,KAHD;AAKAA,WAAOG,gBAAP,CAAwB,OAAxB,EAAiC,MAAM;AACrCH,aAAOI,MAAP;AACAP;AACD,KAHD;AAKAG,WAAOX,GAAP,GAAaA,GAAb;AACAI,6CAAaO,MAAb;AACAF,aAASC,IAAT,CAAcM,WAAd,CAA0BL,MAA1B;AACD,GA5BM,CAAP;AA6BF","names":["NO_DOCUMENT_ERROR","NO_SRC_ERROR","loadScript","src","opts","async","defer","beforeLoad","crossOrigin","Promise","resolve","reject","document","body","script","createElement","setAttribute","addEventListener","remove","appendChild"],"sources":["/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/shared/src/loadScript.ts"],"sourcesContent":["const NO_DOCUMENT_ERROR = 'loadScript cannot be called when document does not exist';\nconst NO_SRC_ERROR = 'loadScript cannot be called without a src';\n\ntype LoadScriptOptions = {\n  async?: boolean;\n  defer?: boolean;\n  crossOrigin?: 'anonymous' | 'use-credentials';\n  beforeLoad?: (script: HTMLScriptElement) => void;\n};\n\nexport async function loadScript(src = '', opts: LoadScriptOptions): Promise<HTMLScriptElement> {\n  const { async, defer, beforeLoad, crossOrigin } = opts || {};\n  return new Promise((resolve, reject) => {\n    if (!src) {\n      reject(NO_SRC_ERROR);\n    }\n\n    if (!document || !document.body) {\n      reject(NO_DOCUMENT_ERROR);\n    }\n\n    const script = document.createElement('script');\n\n    crossOrigin && script.setAttribute('crossorigin', crossOrigin);\n    script.async = async || false;\n    script.defer = defer || false;\n\n    script.addEventListener('load', () => {\n      script.remove();\n      resolve(script);\n    });\n\n    script.addEventListener('error', () => {\n      script.remove();\n      reject();\n    });\n\n    script.src = src;\n    beforeLoad?.(script);\n    document.body.appendChild(script);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}
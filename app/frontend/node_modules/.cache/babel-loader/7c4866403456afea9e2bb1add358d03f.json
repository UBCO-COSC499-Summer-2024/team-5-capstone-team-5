{"ast":null,"code":"import { CURRENT_DEV_INSTANCE_SUFFIXES, LEGACY_DEV_INSTANCE_SUFFIXES } from \"./chunk-X2FYR5U6.mjs\"; // src/utils/instance.ts\n\nfunction isStaging(frontendApi) {\n  return frontendApi.endsWith(\".lclstage.dev\") || frontendApi.endsWith(\".stgstage.dev\") || frontendApi.endsWith(\".clerkstage.dev\") || frontendApi.endsWith(\".accountsstage.dev\");\n} // src/url.ts\n\n\nfunction parseSearchParams() {\n  let queryString = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n\n  if (queryString.startsWith(\"?\")) {\n    queryString = queryString.slice(1);\n  }\n\n  return new URLSearchParams(queryString);\n}\n\nfunction stripScheme() {\n  let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return (url || \"\").replace(/^.+:\\/\\//, \"\");\n}\n\nfunction addClerkPrefix(str) {\n  if (!str) {\n    return \"\";\n  }\n\n  let regex;\n\n  if (str.match(/^(clerk\\.)+\\w*$/)) {\n    regex = /(clerk\\.)*(?=clerk\\.)/;\n  } else if (str.match(/\\.clerk.accounts/)) {\n    return str;\n  } else {\n    regex = /^(clerk\\.)*/gi;\n  }\n\n  const stripped = str.replace(regex, \"\");\n  return `clerk.${stripped}`;\n}\n\nvar getClerkJsMajorVersionOrTag = (frontendApi, version) => {\n  if (!version && isStaging(frontendApi)) {\n    return \"canary\";\n  }\n\n  if (!version) {\n    return \"latest\";\n  }\n\n  return version.split(\".\")[0] || \"latest\";\n};\n\nvar getScriptUrl = (frontendApi, _ref) => {\n  let {\n    clerkJSVersion\n  } = _ref;\n  const noSchemeFrontendApi = frontendApi.replace(/http(s)?:\\/\\//, \"\");\n  const major = getClerkJsMajorVersionOrTag(frontendApi, clerkJSVersion);\n  return `https://${noSchemeFrontendApi}/npm/@clerk/clerk-js@${clerkJSVersion || major}/dist/clerk.browser.js`;\n};\n\nfunction isLegacyDevAccountPortalOrigin(host) {\n  return LEGACY_DEV_INSTANCE_SUFFIXES.some(legacyDevSuffix => {\n    return host.startsWith(\"accounts.\") && host.endsWith(legacyDevSuffix);\n  });\n}\n\nfunction isCurrentDevAccountPortalOrigin(host) {\n  return CURRENT_DEV_INSTANCE_SUFFIXES.some(currentDevSuffix => {\n    return host.endsWith(currentDevSuffix) && !host.endsWith(\".clerk\" + currentDevSuffix);\n  });\n}\n\nvar TRAILING_SLASH_RE = /\\/$|\\/\\?|\\/#/;\n\nfunction hasTrailingSlash() {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let respectQueryAndFragment = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\");\n  }\n\n  return TRAILING_SLASH_RE.test(input);\n}\n\nfunction withTrailingSlash() {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let respectQueryAndFragment = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (!respectQueryAndFragment) {\n    return input.endsWith(\"/\") ? input : input + \"/\";\n  }\n\n  if (hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n\n    if (!path) {\n      return fragment;\n    }\n  }\n\n  const [s0, ...s] = path.split(\"?\");\n  return s0 + \"/\" + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\n\nfunction withoutTrailingSlash() {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let respectQueryAndFragment = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (!respectQueryAndFragment) {\n    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || \"/\";\n  }\n\n  if (!hasTrailingSlash(input, true)) {\n    return input || \"/\";\n  }\n\n  let path = input;\n  let fragment = \"\";\n  const fragmentIndex = input.indexOf(\"#\");\n\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n  }\n\n  const [s0, ...s] = path.split(\"?\");\n  return (s0.slice(0, -1) || \"/\") + (s.length > 0 ? `?${s.join(\"?\")}` : \"\") + fragment;\n}\n\nfunction hasLeadingSlash() {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return input.startsWith(\"/\");\n}\n\nfunction withoutLeadingSlash() {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return (hasLeadingSlash(input) ? input.slice(1) : input) || \"/\";\n}\n\nfunction withLeadingSlash() {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return hasLeadingSlash(input) ? input : \"/\" + input;\n}\n\nfunction cleanDoubleSlashes() {\n  let input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return input.split(\"://\").map(string_ => string_.replace(/\\/{2,}/g, \"/\")).join(\"://\");\n}\n\nfunction isNonEmptyURL(url) {\n  return url && url !== \"/\";\n}\n\nvar JOIN_LEADING_SLASH_RE = /^\\.?\\//;\n\nfunction joinURL(base) {\n  let url = base || \"\";\n\n  for (var _len = arguments.length, input = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    input[_key - 1] = arguments[_key];\n  }\n\n  for (const segment of input.filter(url2 => isNonEmptyURL(url2))) {\n    if (url) {\n      const _segment = segment.replace(JOIN_LEADING_SLASH_RE, \"\");\n\n      url = withTrailingSlash(url) + _segment;\n    } else {\n      url = segment;\n    }\n  }\n\n  return url;\n}\n\nexport { isStaging, parseSearchParams, stripScheme, addClerkPrefix, getClerkJsMajorVersionOrTag, getScriptUrl, isLegacyDevAccountPortalOrigin, isCurrentDevAccountPortalOrigin, hasTrailingSlash, withTrailingSlash, withoutTrailingSlash, hasLeadingSlash, withoutLeadingSlash, withLeadingSlash, cleanDoubleSlashes, isNonEmptyURL, joinURL };","map":{"version":3,"mappings":"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","names":["isStaging","frontendApi","endsWith","parseSearchParams","queryString","startsWith","slice","URLSearchParams","stripScheme","url","replace","addClerkPrefix","str","regex","match","stripped","getClerkJsMajorVersionOrTag","version","split","getScriptUrl","clerkJSVersion","noSchemeFrontendApi","major","isLegacyDevAccountPortalOrigin","host","LEGACY_DEV_INSTANCE_SUFFIXES","some","legacyDevSuffix","isCurrentDevAccountPortalOrigin","CURRENT_DEV_INSTANCE_SUFFIXES","currentDevSuffix","TRAILING_SLASH_RE","hasTrailingSlash","input","respectQueryAndFragment","test","withTrailingSlash","path","fragment","fragmentIndex","indexOf","s0","s","length","join","withoutTrailingSlash","hasLeadingSlash","withoutLeadingSlash","withLeadingSlash","cleanDoubleSlashes","map","string_","isNonEmptyURL","JOIN_LEADING_SLASH_RE","joinURL","base","segment","filter","_segment"],"sources":["/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/shared/src/utils/instance.ts","/Users/jaybhullar/Desktop/team-5-capstone-team-5/app/frontend/node_modules/@clerk/shared/src/url.ts"],"sourcesContent":["/**\n * Check if the frontendApi ends with a staging domain\n */\nexport function isStaging(frontendApi: string): boolean {\n  return (\n    frontendApi.endsWith('.lclstage.dev') ||\n    frontendApi.endsWith('.stgstage.dev') ||\n    frontendApi.endsWith('.clerkstage.dev') ||\n    frontendApi.endsWith('.accountsstage.dev')\n  );\n}\n","import { CURRENT_DEV_INSTANCE_SUFFIXES, LEGACY_DEV_INSTANCE_SUFFIXES } from './constants';\nimport { isStaging } from './utils/instance';\n\nexport function parseSearchParams(queryString = ''): URLSearchParams {\n  if (queryString.startsWith('?')) {\n    queryString = queryString.slice(1);\n  }\n  return new URLSearchParams(queryString);\n}\n\nexport function stripScheme(url = ''): string {\n  return (url || '').replace(/^.+:\\/\\//, '');\n}\n\nexport function addClerkPrefix(str: string | undefined) {\n  if (!str) {\n    return '';\n  }\n  let regex;\n  if (str.match(/^(clerk\\.)+\\w*$/)) {\n    regex = /(clerk\\.)*(?=clerk\\.)/;\n  } else if (str.match(/\\.clerk.accounts/)) {\n    return str;\n  } else {\n    regex = /^(clerk\\.)*/gi;\n  }\n\n  const stripped = str.replace(regex, '');\n  return `clerk.${stripped}`;\n}\n\n/**\n *\n * Retrieve the clerk-js major tag using the major version from the pkgVersion\n * param or use the frontendApi to determine if the canary tag should be used.\n * The default tag is `latest`.\n */\nexport const getClerkJsMajorVersionOrTag = (frontendApi: string, version?: string) => {\n  if (!version && isStaging(frontendApi)) {\n    return 'canary';\n  }\n\n  if (!version) {\n    return 'latest';\n  }\n\n  return version.split('.')[0] || 'latest';\n};\n\n/**\n *\n * Retrieve the clerk-js script url from the frontendApi and the major tag\n * using the {@link getClerkJsMajorVersionOrTag} or a provided clerkJSVersion tag.\n */\nexport const getScriptUrl = (frontendApi: string, { clerkJSVersion }: { clerkJSVersion?: string }) => {\n  const noSchemeFrontendApi = frontendApi.replace(/http(s)?:\\/\\//, '');\n  const major = getClerkJsMajorVersionOrTag(frontendApi, clerkJSVersion);\n  return `https://${noSchemeFrontendApi}/npm/@clerk/clerk-js@${clerkJSVersion || major}/dist/clerk.browser.js`;\n};\n\n// Returns true for hosts such as:\n// * accounts.foo.bar-13.lcl.dev\n// * accounts.foo.bar-13.lclstage.dev\n// * accounts.foo.bar-13.dev.lclclerk.com\nexport function isLegacyDevAccountPortalOrigin(host: string): boolean {\n  return LEGACY_DEV_INSTANCE_SUFFIXES.some(legacyDevSuffix => {\n    return host.startsWith('accounts.') && host.endsWith(legacyDevSuffix);\n  });\n}\n\n// Returns true for hosts such as:\n// * foo-bar-13.accounts.dev\n// * foo-bar-13.accountsstage.dev\n// * foo-bar-13.accounts.lclclerk.com\n// But false for:\n// * foo-bar-13.clerk.accounts.lclclerk.com\nexport function isCurrentDevAccountPortalOrigin(host: string): boolean {\n  return CURRENT_DEV_INSTANCE_SUFFIXES.some(currentDevSuffix => {\n    return host.endsWith(currentDevSuffix) && !host.endsWith('.clerk' + currentDevSuffix);\n  });\n}\n\n/* Functions below are taken from https://github.com/unjs/ufo/blob/main/src/utils.ts. LICENSE: MIT */\n\nconst TRAILING_SLASH_RE = /\\/$|\\/\\?|\\/#/;\n\nexport function hasTrailingSlash(input = '', respectQueryAndFragment?: boolean): boolean {\n  if (!respectQueryAndFragment) {\n    return input.endsWith('/');\n  }\n  return TRAILING_SLASH_RE.test(input);\n}\n\nexport function withTrailingSlash(input = '', respectQueryAndFragment?: boolean): string {\n  if (!respectQueryAndFragment) {\n    return input.endsWith('/') ? input : input + '/';\n  }\n  if (hasTrailingSlash(input, true)) {\n    return input || '/';\n  }\n  let path = input;\n  let fragment = '';\n  const fragmentIndex = input.indexOf('#');\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n    if (!path) {\n      return fragment;\n    }\n  }\n  const [s0, ...s] = path.split('?');\n  return s0 + '/' + (s.length > 0 ? `?${s.join('?')}` : '') + fragment;\n}\n\nexport function withoutTrailingSlash(input = '', respectQueryAndFragment?: boolean): string {\n  if (!respectQueryAndFragment) {\n    return (hasTrailingSlash(input) ? input.slice(0, -1) : input) || '/';\n  }\n  if (!hasTrailingSlash(input, true)) {\n    return input || '/';\n  }\n  let path = input;\n  let fragment = '';\n  const fragmentIndex = input.indexOf('#');\n  if (fragmentIndex >= 0) {\n    path = input.slice(0, fragmentIndex);\n    fragment = input.slice(fragmentIndex);\n  }\n  const [s0, ...s] = path.split('?');\n  return (s0.slice(0, -1) || '/') + (s.length > 0 ? `?${s.join('?')}` : '') + fragment;\n}\n\nexport function hasLeadingSlash(input = ''): boolean {\n  return input.startsWith('/');\n}\n\nexport function withoutLeadingSlash(input = ''): string {\n  return (hasLeadingSlash(input) ? input.slice(1) : input) || '/';\n}\n\nexport function withLeadingSlash(input = ''): string {\n  return hasLeadingSlash(input) ? input : '/' + input;\n}\n\nexport function cleanDoubleSlashes(input = ''): string {\n  return input\n    .split('://')\n    .map(string_ => string_.replace(/\\/{2,}/g, '/'))\n    .join('://');\n}\n\nexport function isNonEmptyURL(url: string) {\n  return url && url !== '/';\n}\n\nconst JOIN_LEADING_SLASH_RE = /^\\.?\\//;\n\nexport function joinURL(base: string, ...input: string[]): string {\n  let url = base || '';\n\n  for (const segment of input.filter(url => isNonEmptyURL(url))) {\n    if (url) {\n      // TODO: Handle .. when joining\n      const _segment = segment.replace(JOIN_LEADING_SLASH_RE, '');\n      url = withTrailingSlash(url) + _segment;\n    } else {\n      url = segment;\n    }\n  }\n\n  return url;\n}\n"]},"metadata":{},"sourceType":"module"}